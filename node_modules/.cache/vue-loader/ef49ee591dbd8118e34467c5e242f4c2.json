{"remainingRequest":"E:\\vue-project\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!E:\\vue-project\\src\\views\\verify.vue?vue&type=template&id=68e5da93","dependencies":[{"path":"E:\\vue-project\\src\\views\\verify.vue","mtime":1644508446470},{"path":"E:\\vue-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646765681334},{"path":"E:\\vue-project\\node_modules\\babel-loader\\lib\\index.js","mtime":1646765696386},{"path":"E:\\vue-project\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1646765707582},{"path":"E:\\vue-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646765681334},{"path":"E:\\vue-project\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1646765700434}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDwhLS0gPGJ1dHRvbiBjbGFzcz0iYnRuIj5sb2dpbjwvYnV0dG9uPiAtLT4NCiAgIDxsb2FkaW5nDQogICAgICAgICAgOmFjdGl2ZT10cnVlDQogICAgICAgICAgOmNhbi1jYW5jZWw9InRydWUiDQogICAgICAgICAgOm9uLWNhbmNlbD0ib25DYW5jZWwiDQogICAgICAgICAgbG9hZGVyPSJkb3RzIg0KICAgICAgICAgIGNvbG9yPSIjZjAwIg0KICAgICAgICAgIG9wYWNpdHk9IjEiDQogICAgICAgICAgOmlzLWZ1bGwtcGFnZT0iZnVsbFBhZ2UiDQogICAgICAgIC8+DQo="},{"version":3,"sources":["E:\\vue-project\\src\\views\\verify.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;GACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC","file":"E:/vue-project/src/views/verify.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <!-- <button class=\"btn\">login</button> -->\r\n   <loading\r\n          :active=true\r\n          :can-cancel=\"true\"\r\n          :on-cancel=\"onCancel\"\r\n          loader=\"dots\"\r\n          color=\"#f00\"\r\n          opacity=\"1\"\r\n          :is-full-page=\"fullPage\"\r\n        />\r\n</template>\r\n<script>\r\nimport user from \"../Service/user\";\r\n\r\n import Loading from 'vue-loading-overlay';\r\n    import 'vue-loading-overlay/dist/vue-loading.css';\r\n\r\nexport default {\r\n  name: \"verify\",\r\n  props: [\"id\", \"token\"],\r\n  components:{\r\n    Loading\r\n  },\r\n  data() {\r\n    return {\r\n      sdata: [],\r\n      loading: true,\r\n      errored: false,\r\n        isLoading: false,\r\n      fullPage: true,\r\n      sflag:false\r\n    };\r\n  },\r\n  mounted() {\r\n    user\r\n      .verify(this.id, this.token)\r\n      .then((response) => {\r\n        this.sdata = response.data;\r\n\r\n        if (this.sdata.mes != \"\") {\r\n          this.$swal.fire({\r\n            position: \"center\",\r\n            icon: \"success\",\r\n            title: \"email verified sucessfully\",\r\n            // showConfirmButton: false,\r\n            // timer: 2000,\r\n          });\r\n          this.$router.push({name:'index'})\r\n        } else {\r\n          this.$swal.fire({\r\n            position: \"center\",\r\n            icon: \"error\",\r\n            title: \"Verification was not successful; please try again\",\r\n            // showConfirmButton: false,\r\n            // timer: 2000,\r\n          });\r\n          this.$router.push({name:'index'})\r\n\r\n        }\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n          this.$swal.fire({\r\n            position: \"center\",\r\n            icon: \"error\",\r\n            title: e,\r\n            showConfirmButton: false,\r\n            // timer: 2000,\r\n          });\r\n          this.$router.push({name:'index'})\r\n        this.errored = true;\r\n      })\r\n      .finally(() => {\r\n        this.loading = false;\r\n      });\r\n  },\r\n};\r\n</script>\r\n<style></style>\r\n"]}]}