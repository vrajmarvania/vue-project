{"remainingRequest":"E:\\vue-project\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!E:\\vue-project\\src\\views\\admin\\Category\\Edit-Category.vue?vue&type=style&index=0&id=fe709bec&scoped=true&lang=css","dependencies":[{"path":"E:\\vue-project\\src\\views\\admin\\Category\\Edit-Category.vue","mtime":1644828385715},{"path":"E:\\vue-project\\node_modules\\css-loader\\dist\\cjs.js","mtime":1646765687174},{"path":"E:\\vue-project\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1646765707182},{"path":"E:\\vue-project\\node_modules\\postcss-loader\\src\\index.js","mtime":1646765696078},{"path":"E:\\vue-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646765681334},{"path":"E:\\vue-project\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1646765700434}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouc2Igew0KICBib3gtc2hhZG93OiAwcHggMHB4IDVweCAycHggIzAwMDAwMDEyOw0KfQ0K"},{"version":3,"sources":["E:\\vue-project\\src\\views\\admin\\Category\\Edit-Category.vue"],"names":[],"mappings":";AAgMA,CAAC,CAAC,EAAE;EACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC","file":"E:/vue-project/src/views/admin/Category/Edit-Category.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div class=\"card sb\" v-if=\"!loading\">\r\n    <div class=\"card-body p-5 m-2\">\r\n      <form class=\"row g-3\" @submit=\"submit\">\r\n        <h5 class=\"fw-bolder\">Category Basic information</h5>\r\n        <div class=\"col-md-6\">\r\n          <label for=\"CategoryName\" class=\"form-label\">CategoryName</label>\r\n          <input\r\n            type=\"text\"\r\n            v-bind:class=\"{\r\n              'form-control': true,\r\n              'is-invalid': errors.CategoryName != null,\r\n            }\"\r\n            id=\"CategoryName\"\r\n            v-model=\"CategoryNamee\"\r\n            required\r\n          />\r\n          <div id=\"CategoryType\" class=\"invalid-feedback\">\r\n            {{ errors.CategoryName }}\r\n          </div>\r\n        </div>\r\n        <b />\r\n        <div class=\"col-md-6\">\r\n          <label for=\"CategoryType\" class=\"form-label\">Category Type</label>\r\n          <input\r\n            type=\"text\"\r\n            v-bind:class=\"{\r\n              'form-control': true,\r\n              'is-invalid': errors.Type != null,\r\n            }\"\r\n            id=\"CategoryType\"\r\n            required\r\n            v-model=\"Typee\"\r\n          />\r\n          <div id=\"CategoryType\" class=\"invalid-feedback\">\r\n            {{ errors }}\r\n          </div>\r\n        </div>\r\n        <b />\r\n        <label for=\"CategoryImage\" class=\"form-label\">Category Image </label>\r\n        <div class=\"col-md-6 d-flex\">\r\n          <input\r\n            type=\"file\"\r\n            @change=\"Images_onFileChanged\"\r\n            v-bind:class=\"{\r\n              'form-control': true,\r\n              'is-invalid': errors.Fimg != null,\r\n            }\"\r\n          /><button @click.prevent=\"Images_onUpload\">Upload!</button>\r\n        </div>\r\n        <div id=\"CategoryType\" class=\"invalid-feedback\">\r\n          {{ errors.Fimg }}\r\n        </div>\r\n        <div v-if=\"Fimge != ''\">\r\n          <img :src=\"Fimge\" style=\"height: 200px\" />\r\n        </div>\r\n        <!-- {{Fimge}} -->\r\n        <div class=\"col-12\">\r\n          <button\r\n            class=\"btn fw-bolder\"\r\n            style=\"background-color: red; color: white\"\r\n            type=\"submit\"\r\n          >\r\n            Edit Category\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <!-- {{ Fimge }} -->\r\n  </div>\r\n</template>\r\n<script>\r\nimport { useForm, useField } from \"vee-validate\";\r\nimport * as yup from \"yup\";\r\nimport collection from \"../../../Service/Collection\";\r\nimport imageservice from \"../../../Service/image.service.js\";\r\n\r\nexport default {\r\n  name: \"EditCategory\",\r\n  props: [\"datass\"],\r\n  methods: {\r\n    Images_onFileChanged(event) {\r\n      this.selectedFile = event.target.files[0];\r\n    },\r\n    Images_onUpload() {\r\n      const mypostparameters = new FormData();\r\n      mypostparameters.append(\r\n        \"image\",\r\n        this.selectedFile,\r\n        this.selectedFile.name\r\n      );\r\n      imageservice\r\n        .uploadimage(mypostparameters)\r\n        .then((response) => {\r\n          this.img = response.data.url;\r\n          this.Fimge = response.data.url;\r\n\r\n          console.log(response.data.url);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          // this.errored = true;\r\n        })\r\n        .finally(() => {\r\n          // this.loading = false;\r\n        });\r\n      // e.preventdefault()\r\n    },\r\n  },\r\n  data() {\r\n    const schema = yup.object({\r\n      CategoryName: yup.string().required(\"is CategoryName required\"),\r\n      Type: yup.string().required(\"is CategoryType required\"),\r\n      Fimg: yup.string().required(\"is CategoryImage required\"),\r\n    });\r\n    var { handleSubmit, errors } = useForm({\r\n      validationSchema: schema,\r\n    });\r\n\r\n    const { value: CategoryNamee } = useField(\"CategoryName\");\r\n    const { value: Typee } = useField(\"Type\");\r\n    const { value: Fimge } = useField(\"Fimg\");\r\n\r\n    const submit = handleSubmit((values) => {\r\n      console.log(values);\r\n      values._id = this.datas[0]._id;\r\n      values.data = this.datas[0].Data;\r\n      console.log(values);\r\n      this.$swal\r\n        .fire({\r\n          title: \"Do you want to save the changes?\",\r\n          showCancelButton: true,\r\n          confirmButtonText: \"Save\",\r\n          denyButtonText: `Don't save`,\r\n        })\r\n        .then((result) => {\r\n          /* Read more about isConfirmed, isDenied below */\r\n          if (result.isConfirmed) {\r\n            collection\r\n              .put_collecion(values)\r\n              .then((response) => {\r\n                console.log(response);\r\n                this.$swal.fire(\"Saved!\", \"\", \"success\");\r\n                this.$router.push(\"Manage-Category\");\r\n              })\r\n              .catch((e) => {\r\n                console.log(e);\r\n                this.$swal.fire(e, \"\", \"error\");\r\n                this.errored = true;\r\n              })\r\n              .finally(() => {\r\n                this.loading = false;\r\n              });\r\n          }\r\n        });\r\n    });\r\n\r\n    return {\r\n      datas: [],\r\n      CategoryNamee,\r\n      Typee,\r\n      Fimge,\r\n      errors,\r\n      submit,\r\n      loading: true,\r\n    };\r\n  },\r\n  mounted() {\r\n    console.log(this.datass);\r\n    if (this.datass != undefined) {\r\n      collection\r\n        .get_collection(this.datass)\r\n        .then((response) => {\r\n          this.datas = response.data;\r\n          this.CategoryNamee = this.datas[0].CategoryName;\r\n          this.Typee = this.datas[0].Type;\r\n          this.Fimge = this.datas[0].Fimg;\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          this.errored = true;\r\n        })\r\n        .finally(() => {\r\n          this.loading = false;\r\n        });\r\n    } else {\r\n      this.$router.push({ name: \"ManageCategory\" });\r\n    }\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.sb {\r\n  box-shadow: 0px 0px 5px 2px #00000012;\r\n}\r\n</style>\r\nWWWW\r\n"]}]}